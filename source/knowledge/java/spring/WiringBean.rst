=====================
装配 bean
=====================

在Spring中，对象无需自己查找或创建与其所关联的其他对象。相反，容器会负责把需要相互协作的 **对象引用** 赋予各个对象。

创建应用对象之间协作关系的行为通常称为装配（wiring），这也是依赖注入（DI）的本质。

Spring容器负责创建应用程序中的bean并通过DI来协调这些对象之间的关系。但是，作为开发人员，你需要告诉Spring要创建哪些bean并且如何将其装配在一起。

三种主要的装配机制
======================

Spring 提供了三种主要的装配机制：

* 隐式的bean发现机制和自动装配。
* 在Java中进行显式配置。
* 在XML中进行显式配置。

.. note:: 

   建议是尽可能地使用自动配置的机制。显式配置越少越好。当你必须要显式配置bean的时候（比如，有些源码不是由你来维护的，而当你需要为这些代码配置bean的时候），推荐使用类型安全并且比XML更加强大的JavaConfig。最后，只有当你想要使用便利的XML命名空间，并且在JavaConfig中没有同样的实现时，才应该使用XML。


